graphql:
  servlet:
    allow-origin: "https://j8d110.p.ssafy.io,http://127.0.0.1:5173,http://localhost:5173,http://172.30.1.95"

server:
#  host: localhost
#  port: 8085
  servlet:
    context-path: /spring

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://j8d110.p.ssafy.io:4000/specialized
    username: root
    password: root
  kafka:
    bootstrap-servers: j8d110.p.ssafy.io:9092
    producer:
      acks: all
      retries: 0
      batch-size: 16384
      linger-ms: 1
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  graphql:
    path: /graphql
    schema:
      locations: classpath:graphql/**/
      fileExtensions: .graphqls, .gqls
    cors:
      allowed-origins: https://j8d110.p.ssafy.io, http://127.0.0.1:5173, http://localhost:5173, http://172.30.1.95 # Comma-separated list of origin patterns like 'https://*.example.com' to allow.
      allowed-methods: '*'
      allow-credentials: true # Whether credentials are supported. When not set, credentials are not supported.
#      spring.graphql.cors.allowed-headers= # Comma-separated list of headers to allow in a request. '*' allows all headers.
#      spring.graphql.cors.exposed-headers= # Comma-separated list of headers to include in a response.


  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    open-in-view: false
    hibernate:
      ddl-auto: update
  #    properties:
  #      hibernate:
  #        show_sql: true
  #        format_sql: true

  profiles:
    include: key

  redis:
    host: j8d110.p.ssafy.io
    port: 7963

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
logging:
  level:
    org:
      hibernate:
        type:
          descriptor:
            sql: trace
